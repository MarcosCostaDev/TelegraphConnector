name: Pre-Release Deployment

on:
  push:
    branches:
      - pre-release

env:
    working_dir: ${{ github.workspace }}/src
    connector_path: ${{ github.workspace }}/src/TelegraphConnector/TelegraphConnector.csproj
    parses_path: ${{ github.workspace }}/src/TelegraphConnector.Parses/TelegraphConnector.Parses.csproj

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Update version
      id: deployversion
      run: |
        BUILD_NUMBER="${{ github.run_number }}"
        # Get the current year, month, and day
        year=$(date +%Y)
        month=$(date +%m)
        day=$(date +%d)
        
        # Calculate the number of days since the start of the month
        days_since_start=$((day - 1))
        
        # Calculate the number of days since the last Wednesday
        days_since_wednesday=$(((4 + days_since_start) % 7))
        
        # Calculate the week of the month (1-based)
        week=$(((days_since_start + 3) / 7 + 1))

        if [[ $month -lt 10 ]]; then
            week="0$month"
        fi

        if [[ $week -lt 10 ]]; then
            week="0$week"
        fi
                
        version="$year.$month.$week$BUILD_NUMBER"

        build_name="package-v$version"

        echo "version=$version" >> $GITHUB_OUTPUT

        echo "build_name=$build_name" >> $GITHUB_OUTPUT
    - name: show variables
      run: |
        echo ${{ env.working_dir }}
        echo ${{ env.connector_path }}
        echo ${{ env.parses_path }}
        echo ${{ steps.deployversion.outputs.build_name }}
        echo ${{ steps.deployversion.outputs.version }}

    - name: Build solution
      run: dotnet build ${{ env.working_dir }}
    - name: Run tests
      run: dotnet test ${{ env.working_dir }}
    - name: Create NuGet package for telegraph connector
      run: dotnet pack ${{ env.connector_path }} -p:Version='${{ steps.deployversion.outputs.version }}' --version-suffix "pre" -c Release -o ./nuget
    - name: Create NuGet package for telegraph connector parses
      run: dotnet pack ${{ env.parses_path }} -p:Version='${{ steps.deployversion.outputs.version }}' --version-suffix "pre" -c Release -o ./nuget
    - name: Deploy NuGet package
      run: dotnet nuget push ./nuget/*.nupkg -k ${{ secrets.GT_KEY }} -s "github"
    - name: Create tag
      run: |
        git tag v${{ env.version }}
        git push origin v${{ env.version }}